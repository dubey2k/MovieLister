Index: app/src/main/java/com/example/myapplication/ui/adapters/MainAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.ui.adapters\r\n\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.ViewGroup\r\nimport androidx.paging.PagingDataAdapter\r\nimport androidx.recyclerview.widget.AsyncListDiffer\r\nimport androidx.recyclerview.widget.DiffUtil\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.bumptech.glide.Glide\r\nimport com.example.myapplication.R\r\nimport com.example.myapplication.constants.IMAGE_BASE\r\nimport com.example.myapplication.databinding.MainItemBinding\r\nimport com.example.myapplication.data.models.Movie\r\n\r\n\r\nclass MainAdapter: PagingDataAdapter<Movie, MainAdapter.mainVH>(DiffUtilCallBack()) {\r\n\r\n    inner class mainVH(val binding: MainItemBinding) : RecyclerView.ViewHolder(binding.root)\r\n\r\n    class DiffUtilCallBack : DiffUtil.ItemCallback<Movie>() {\r\n        override fun areContentsTheSame(oldItem: Movie, newItem: Movie): Boolean {\r\n            return oldItem.id == newItem.id\r\n        }\r\n\r\n        override fun areItemsTheSame(oldItem: Movie, newItem: Movie): Boolean {\r\n            return oldItem == newItem\r\n        }\r\n    }\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): mainVH {\r\n        val view = MainItemBinding.bind(\r\n            LayoutInflater.from(parent.context).inflate(R.layout.main_item, parent, false)\r\n        )\r\n        return mainVH(view)\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: mainVH, position: Int) {\r\n        holder.itemView.apply {\r\n            holder.binding.titleItem.text = getItem(position)?.original_title\r\n            holder.binding.descItem.text = getItem(position)?.overview\r\n            holder.binding.posterImg\r\n            Glide.with(this).load(IMAGE_BASE + getItem(position)?.poster_path)\r\n                .into(holder.binding.posterImg)\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/ui/adapters/MainAdapter.kt b/app/src/main/java/com/example/myapplication/ui/adapters/MainAdapter.kt
--- a/app/src/main/java/com/example/myapplication/ui/adapters/MainAdapter.kt	(revision 024dac261c8002ea1968f21de86f5c0e45465386)
+++ b/app/src/main/java/com/example/myapplication/ui/adapters/MainAdapter.kt	(date 1643623959639)
@@ -1,10 +1,8 @@
 package com.example.myapplication.ui.adapters
 
-import android.util.Log
 import android.view.LayoutInflater
 import android.view.ViewGroup
 import androidx.paging.PagingDataAdapter
-import androidx.recyclerview.widget.AsyncListDiffer
 import androidx.recyclerview.widget.DiffUtil
 import androidx.recyclerview.widget.RecyclerView
 import com.bumptech.glide.Glide
@@ -14,9 +12,9 @@
 import com.example.myapplication.data.models.Movie
 
 
-class MainAdapter: PagingDataAdapter<Movie, MainAdapter.mainVH>(DiffUtilCallBack()) {
+class MainAdapter: PagingDataAdapter<Movie, MainAdapter.MainVH>(DiffUtilCallBack()) {
 
-    inner class mainVH(val binding: MainItemBinding) : RecyclerView.ViewHolder(binding.root)
+    inner class MainVH(val binding: MainItemBinding) : RecyclerView.ViewHolder(binding.root)
 
     class DiffUtilCallBack : DiffUtil.ItemCallback<Movie>() {
         override fun areContentsTheSame(oldItem: Movie, newItem: Movie): Boolean {
@@ -28,14 +26,14 @@
         }
     }
 
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): mainVH {
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MainVH {
         val view = MainItemBinding.bind(
             LayoutInflater.from(parent.context).inflate(R.layout.main_item, parent, false)
         )
-        return mainVH(view)
+        return MainVH(view)
     }
 
-    override fun onBindViewHolder(holder: mainVH, position: Int) {
+    override fun onBindViewHolder(holder: MainVH, position: Int) {
         holder.itemView.apply {
             holder.binding.titleItem.text = getItem(position)?.original_title
             holder.binding.descItem.text = getItem(position)?.overview
